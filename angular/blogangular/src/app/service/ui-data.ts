let ui_data = [
  {
    num: '87',
    date: '2022-03-23',
    title: 'fast-way-to-implment-object-trait',
    content: 'fast-way-to-implment-object-trait',
    category: 'rs',
  },
  {
    num: '86',
    date: '2022-03-17',
    title: 'rust-list_dir',
    content: 'rust-list_dir',
    category: 'rs',
  },
  {
    num: '85',
    date: '2022-03-16',
    title: 'rust-implment-find-and-remove-cli',
    content: 'rust-implment-find-and-remove-cli',
    category: 'rs',
  },
  {
    num: '83',
    date: '2022-03-05',
    title: 'optimize-rust-compilation-binary-size',
    content: 'optimize-rust-compilation-binary-size',
    category: 'rs',
  }, {
    num: '82',
    date: '2022-03-05',
    title: 'my-command-list',
    content: 'my-command-list',
    category: 'sh',
  },
  {
    num: '81',
    date: '2022-02-28',
    title: 'implement-trie-data-structure',
    content: 'implement-trie-data-structure',
    category: 'rs&&ds',
  },
  {
    num: '80',
    date: '2022-02-20',
    title: 'leetcode: pase_string_and_decimal_conversion',
    content: 'Brush leetcode with rust: pase_string_and_decimal_conversion',
    category: 'rs',
  },
  {
    num: '79',
    date: '2022-02-20',
    title: 'leetcode: where_my_anagrams_at',
    content: 'Brush leetcode with rust: where_my_anagrams_at',
    category: 'rs',
  },
  {
    num: '78',
    date: '2022-02-20',
    title: 'leetcode: unique-email-addresses',
    content: 'Brush leetcode with rust: unique-email-addresses',
    category: 'rs',
  },
  {
    num: '77',
    date: '2022-02-20',
    title: 'leetcode: di-string-match',
    content: 'Brush leetcode with rust: di-string-match',
    category: 'rs',
  }, {
    num: '76',
    date: '2022-02-14',
    title: 'leetcode: maximum-depth-of-binary-tree',
    content: 'Brush leetcode with rust: maximum-depth-of-binary-tree',
    category: 'rs',
  },
  {
    num: '75',
    date: '2022-02-14',
    title: 'leetcode: flipping-an-image',
    content: 'Brush leetcode with rust: flipping-an-image',
    category: 'rs',
  },
  {
    num: '74',
    date: '2022-02-14',
    title: 'leetcode: hamming-distance',
    content: 'Brush leetcode with rust: hamming-distance',
    category: 'rs',
  },
  {
    num: '73',
    date: '2022-02-14',
    title: 'leetcode: nim-game',
    content: 'Brush leetcode with rust: nim-game',
    category: 'rs',
  },
  {
    num: '72',
    date: '2022-02-14',
    title: 'leetcode: self-dividing-numbers',
    content: 'Brush leetcode with rust: self-dividing-numbers',
    category: 'rs',
  },
  {
    num: '71',
    date: '2022-02-14',
    title: 'leetcode: unique-morse-code-words',
    content: 'Brush leetcode with rust: unique-morse-code-words',
    category: 'rs',
  },
  {
    num: '70',
    date: '2022-02-14',
    title: 'leetcode: jewels-and-stones',
    content: 'Brush leetcode with rust: jewels-and-stones',
    category: 'rs',
  },
  {
    num: '69',
    date: '2022-02-12',
    title: 'leetcode: robot-return-to-origin',
    content: 'Brush leetcode with rust: robot-return-to-origin',
    category: 'rs',
  },
  {
    num: '68',
    date: '2022-02-12',
    title: 'leetcode: merge-two-binary-trees',
    content: 'Brush leetcode with rust: merge-two-binary-trees',
    category: 'rs',
  },
  {
    num: '67',
    date: '2022-02-12',
    title: 'leetcode: to-lower-case',
    content: 'Brush leetcode with rust: to-lower-case',
    category: 'rs',
  },
  {
    num: '66',
    date: '2022-02-12',
    title: 'leetcode: same-tree',
    content: 'Brush leetcode with rust: same-tree',
    category: 'rs',
  },
  {
    num: '65',
    date: '2022-02-12',
    title: 'Rust implement AEC encryption',
    content: 'Rust implement AEC encryption and decryption',
    category: 'rs',
  },
  {
    num: '64',
    date: '2022-01-22',
    title: 'Rust implement tree data_structure)',
    content: 'implement tree data_structure with rust',
    category: 'rs&&ds',
  },
  {
    num: '63',
    date: '2022-01-20',
    title: 'Compress rust binary size(优化 Rust 程序编译体积)',
    content: 'Compress rust binary size 优化 Rust 程序编译体积',
    category: 'rs',
  },
  {
    num: '62',
    date: '2022-01-04',
    title: 'encryption data  加密数据',
    content: 'encryption data  加密数据',
    category: 'rs',
  },
  {
    num: '61',
    date: '2022-01-04',
    title: 'vec 删除重复的元素,返回 Unique Vec',
    content: 'vec 删除重复的元素,返回 Unique Vec',
    category: 'rs',
  },
  {
    num: '60',
    date: '2022-01-04',
    title: ' 将 Keras 模型导入 TensorFlow.js ',
    content:
      ' Keras 模型（通常通过 Python API 创建）可能保存成多种格式之一。“完整模型”格式可以转换成 TensorFlow.js Layers 格式，这种格式可以直接加载到 TensorFlow.js 中进行推断或进一步训练。',
    category: 'ml',
  },
  {
    num: '59',
    date: '2022-01-03',
    title: 'Use Css Media',
    content: 'Use Css Media 媒体查询的响应式设计',
    category: 'js',
  },
  {
    num: '58',
    date: '2022-01-03',
    title: 'Js implment music player',
    content: 'Js implment music player with js && css',
    category: 'js',
  },
  {
    num: '57',
    date: '2022-01-03',
    title: 'Rust implment matrix',
    content: 'Rust implment matrix operation methods',
    category: 'rs',
  },
  {
    num: '56',
    date: '2022-01-02',
    title: 'Rust Grammar Summary',
    content: 'Rust Grammar Summary &&  learn notebook',
    category: 'rs',
  },
  {
    num: '55',
    date: '2021-10-27',
    title: 'Java Solution for CodeWar Kata ',
    content: 'Java Solution for CodeWar Kata && Java Grammar',
    category: 'java',
  },
  {
    num: '54',
    date: '2021-10-24',
    title: 'Default Bash profile ',
    content: 'Default Bash profile && Explain profile',
    category: 'sh',
  },
  {
    num: '53',
    date: '2021-10-19',
    title: 'Use Rust implement codewar Kata solutions',
    content: `Use Rust implement codewar Kata solutions`,
    category: 'ds&&rs',
  },
  {
    num: '52',
    date: '2021-10-09',
    title: 'Javascript 面试 this 指向',
    content: 'Javascript 面试 this 指向（面试必考）',
    category: 'js',
  },
  {
    num: '51',
    date: '2021-10-08',
    title: 'precompile js 面试 （预编译）',
    content: '经典js面试题（预编译）主要是测试前端开发者对作用域的理解',
    category: 'js',
  },
  {
    num: '50',
    date: '2021-09-30',
    title: '图解 Rust 所有权与生命周期',
    content:
      '所有权与生命周期是  Rust  语言非常核心的内容。其实不仅仅是 Rust 有这两个概念，在C/C++ 中也一样是存在的。而几乎所有的内存安全问题也源于对所有权和生命周期的错误使用。只要是不采用垃圾回收来管理内存的程序语言，都会有这个问题。',
    category: 'rs',
    diractory: [
      '1.引言',
      '2.所有权与生命周期期望解决的问题',
      '3.变量绑定与所有权的赋予 ',
      '4.所有权的转移',
    ],
  },
  {
    num: '49',
    date: '2021-09-29',
    title: 'Generate .jar in java && run',
    content:
      'JAR 文件格式以流行的 ZIP 文件格式为基础。与 ZIP 文件不同的是，JAR 文件不仅用于压缩和发布，而且还用于部署和封装库、组件和插件程序，并可被像编译器和 JVM 这样的工具直接使用。在 JAR 中包含特殊的文件，如 manifests 和部署描述符，用来指示工具如何处理特定的 JAR。',
    category: 'java',
  },
  {
    num: '48',
    date: '2021-09-28',
    title: 'Ajax 原理（发送 Ajax 请求的五个步骤)',
    content:
      ' 我们在访问一个普通的网站时，当浏览器加载完`HTML、CSS、JS`以后，网站的内容就固定了。如果想让网站内容发生更改，就必须刷新页面才能够看到更新的内容。可如果用到异步更新，情况就大为改观了。 ',
    category: 'js',
  },

  {
    num: '47',
    date: '2021-09-27',
    title: 'Angular-组件传值',
    content:
      ' 一. 基本概念. 输出属性 @Output 装饰器：这个属性总是返回 EventEmitter 。. 当它通过事件绑定的形式被绑定时，值会“流出”这个属性。. 输入 属性 @Input 通常接收数据值。. 输出 属性 @Output 暴露事件生产者，如 EventEmitter 对象。',
    category: 'angular',
  },
  {
    num: '46',
    date: '2021-09-20',
    title: 'How To Read Local JSON Files In Angular',
    content:
      'We can import or read local JSON files in Angular,several different ways depending upon the Angular version we are using.In this post I am listing out different methods with examples on how to read JSON files in Angular.',
    category: 'angular',
  },
  {
    num: '45',
    date: '2021-09-18',
    title:
      'How to reload/refresh the data when navigate to same route in Angular 9',
    content:
      'setting route the SettingViewComponent code doesn’t get initiate again.I have a redirection logic in SettingViewComponent which needs to be re-initiate.',
    category: 'angular',
  },
  {
    num: '44',
    date: '2021-09-15',
    title: 'Rust 常用类型转换',
    content:
      '  可以看到i32, u32, f64 到String类型是同一个函数，这样的话，如何来确定要转换至的具体类型？就是类型推导！当然，如果rust无法通过上下文推导出类型，就需要给出提示，例如x.parse::().unwrap()。但是通常情况下，都不需要提示即可自动推导出类型',
    category: 'rs',
  },
  {
    num: '43',
    date: '2021-09-12',
    title: 'Creating the Perfect Commit in Git',
    content:
      ' A commit in Git can be one of two things:- It can be a jumbled assortment of changes from all sorts of topics: some lines of code for a bugfix, a stab at rewriting an old module, and a couple of new files for a brand new feature.',
    category: 'git',
  },
  {
    num: '42',
    date: '2021-09-10',
    title: '单线程,同步任务和异步任务',
    content:
      '  JavaScript 语言和执行环境是单线程。即同一时间，只能处理一个任务。具体来说，所谓单线程，是指 JS 引擎中负责解释和执行 JavaScript 代码的线程只有一个，也就是一次只能完成一项任务，这个任务执行完后才能执行下一个。所有的任务都需要排队。',
    category: 'js',
  },
  {
    num: '41',
    date: '2021-08-29',
    title: '零值比较--BOOL，int，float，指针变量与零值比较的if语句',
    content:
      '  这是程序员面试的一道常见题，也是个C++基础问题。若只在大学里看过几本基础的编程入门书，看见这道题可能会觉得奇怪，不就是和0比较吗，直接拿出来比就是了，其实非也。',
    category: 'java',
  },
  {
    num: '40',
    date: '2021-08-25',
    title: 'Git Guide',
    content: 'Git 简单使用说明',
    category: 'git',
  },
  {
    num: '39',
    date: '2021-08-20',
    title: 'Google zx',
    content:
      '  Bash is great, but when it comes to writing scripts,The `zx` package provides useful wrappers around `child_process`, escapes arguments and gives sensible defaults.',
    category: 'js',
  },
  {
    num: '38',
    date: '2021-08-19',
    title: 'Implement Algorithm With JavaScript or Java',
    content: '  用Javascript,Java实现常用的算法',
    category: 'ds&&java&&rs',
  },
  {
    num: '37',
    date: '2021-08-15',
    title: 'Vue Animations',
    content: '动画的作用：提高用户的体验，帮助用户更好的理解页面中的功能。',
    category: 'vue',
  },
  {
    num: '36',
    date: '2021-08-15',
    title: 'Vue Post Props',
    content:
      ' 子组件不能直接使用父组件中的数据。父组件可以通过props属性向子组件传值。',
    category: 'vue',
  },
  {
    num: '35',
    date: '2021-08-15',
    title: 'Vue Ajax',
    content:
      '  vue-resource 发送Ajax请求常见的数据请求类型包括：get、post、jsonp。',
    category: 'vue',
  },
  {
    num: '34',
    date: '2021-08-10',
    title: 'React life cycle',
    content:
      ' 组件的生命周期在组件创建、到加载到页面上运行、以及组件被销毁的过程中，总是伴随着各种各样的事件，这些在组件特定时期，触发的事件统称为组件的生命周期。',
    category: 'react',
  },
  {
    num: '33',
    date: '2021-08-10',
    title: 'React Router',
    content: ' 使用React路由之前，我们需要先安装 react-router-dom这个包',
    category: 'react',
  },
  {
    num: '32',
    date: '2021-08-10',
    title: 'React This',
    content: '通过 bind() 绑定this，并给函数传参',
    category: 'react',
  },
  {
    num: '31',
    date: '2021-08-08',
    title: 'Node MySql ',
    content: ' 用 Node.js 管理 MySql 数据库',
    category: 'backend',
  },
  {
    num: '30',
    date: '2021-08-07',
    title: 'CSS Note',
    content: '  CSS Note',
    category: 'js',
  },
  {
    num: '29',
    date: '2021-08-02',
    title: 'Angular $parse/$eval和$observe/$watch如何区分',
    content:
      ' 大家在看angular的时候，有时候偶尔会看到$parse,$eval和$observe,$watch这两对语法，随着深入使用angular，就不可避免使用到它。 文章从内部运行机制跟实际需求的角度来解释这两对语法的区别。',
    category: 'angular',
  },
  {
    num: '28',
    date: '2021-08-02',
    title: 'Angular 创建自定义指令',
    content:
      '  这是一篇译文，来自angular开发者说明的指令。主要面向已经熟悉angular开发基础的开发者。这篇文档解释了什么情况下需要创建自己的指令，和如何去创建指令。',
    category: 'angular',
  },
  {
    num: '27',
    date: '2021-08-01',
    title: 'Angular 自定义指令Note',
    content:
      '指令能够能够把外部定义的内容传回指令模板内部(通过在内部标签使用ng-transclude)。这个外部指定的内容是根据外部的作用域控制的，跟指令的作用域无关。',
    category: 'angular',
  },
  {
    num: '26',
    date: '2021-08-01',
    title: '控制器之间的通信',
    content:
      '由于作用域的继承是基于js的原型继承方式，所以这里分为两种情况，当作用域上面的值为基本类型的时候，修改父作用域上面的值会 影响到子作用域，反之，修改子作用域只会影响子作用域的值',
    category: 'angular',
  },
  {
    num: '25',
    date: '2021-08-01',
    title: 'angular中的transclude',
    content:
      'Transclude - 在Angular的指令中，大家会看到有一个这样的一个配置属性，这个单词在英文字典里面也查询不到真实的意思，所以就用英文来标示它吧。如果你深入的使用angular的话，你就花很大一部分时间来创建自定义指令，那么就不可避免的要深入理解transclude。',
    category: 'angular',
  },
  {
    num: '24',
    date: '2021-08-01',
    title: '指令通信',
    content:
      '通过收集整理，总结出了以下三种指令与控制器的通信方式：共享对象，服务，事件；每种方法都有自己的优缺点跟使用范围，大家可以斟酌使用',
    category: 'angular',
  },
  {
    num: '23',
    date: '2021-07-18',
    title: 'JS Tutorial Array',
    content: 'JS Tutorial, introduce Comment Method for Array',
    category: 'js',
  },
  {
    num: '22',
    date: '2021-07-18',
    title: 'JS Tutorial Object',
    content: 'JS Tutorial, introduce Comment Method for Object',
    category: 'js',
  },
  {
    num: '21',
    date: '2021-07-18',
    title: 'JS Tutorial Math',
    content: 'JS Tutorial, introduce Comment Method for Math',
    category: 'js',
  },
  {
    num: '20',
    date: '2021-07-17',
    title: 'JS Tutorial Set',
    content: 'JS Tutorial, introduce Comment Method for Set',
    category: 'js',
  },
  {
    num: '19',
    date: '2021-07-17',
    title: 'JS Tutorial Map',
    content: 'JS Tutorial, introduce Comment Method for Map',
    category: 'js',
  },

  {
    num: '18',
    date: '2021-07-16',
    title: 'Python Solutions for MEID convert to pESN ',
    content: 'MEID convert to pESN,Use python hashlib tool',
    category: 'py',
  },
  {
    num: '17',
    date: '2021-07-15',
    title: 'Python Solutions for Find some dir or file list and romove ',
    content: 'Find some dir or file list and romove,Use python os library',
    category: 'py',
  },
  {
    num: '16',
    date: '2021-07-10',
    title: 'Python Solutions for Wechat send Messages regularly',
    content: ' Wechat send Messages regularly,Use python wxpy,asyncio library',
    category: 'py',
  },
  {
    num: '15',
    date: '2021-07-20',
    title: 'Solutions for Code War Problems',
    content: ' Use Javascript or Rust to Solve Code War Problems',
    category: 'ds',
  },
  {
    num: '14',
    date: '2021-07-06',
    title: 'Data Structure: LinkedList',
    content: 'Implementing LinkedList',
    category: 'ds',
  },
  {
    num: '13',
    date: '2021-07-06',
    title: 'Data Structure:BinarySearchTree ',
    content: 'Implementing BinarySearchTree',
    category: 'ds',
  },
  {
    num: '12',
    date: '2021-07-06',
    title: 'Data Structure:BinarySearchTree ',
    content: 'Implementing BinarySearchTree',
    category: 'rs',
  },

  {
    num: '11',
    date: '2021-07-05',
    title: 'leetcode: two sum',
    content: 'Brush leetcode with rust: two sum',
    category: 'rs',
  },
  {
    num: '10',
    date: '2021-07-05',
    title: 'leetcode: add-two-numbers',
    content: 'Brush leetcode with rust: add-two-numbers',
    category: 'rs',
  },
  {
    num: '9',
    date: '2021-07-05',
    title: 'leetcode: zigzag-conversion',
    content: 'Brush leetcode with rust: zigzag-conversion',
    category: 'rs',
  },
  {
    num: '8',
    date: '2021-07-05',
    title: 'leetcode: reverse-integer',
    content: 'Brush leetcode with rust: reverse-integer',
    category: 'rs',
  },
  {
    num: '7',
    date: '2021-07-05',
    title: 'leetcode: string-to-integer',
    content: 'Brush leetcode with rust: string-to-integer',
    category: 'rs',
  },
  {
    num: '6',
    date: '2021-07-05',
    title: 'leetcode: palindrome-number',
    content: 'Brush leetcode with rust: palindrome-number',
    category: 'rs',
  },
  {
    num: '5',
    date: '2021-07-05',
    title: 'leetcode: integer-to-roman',
    content: 'Brush leetcode with rust: integer-to-roman',
    category: 'rs',
  },
  {
    num: '4',
    date: '2021-07-05',
    title: 'leetcode: container-with-most-water',
    content: 'Brush leetcode with rust: container-with-most-water',
    category: 'rs',
  },
  {
    num: '3',
    date: '2021-07-05',
    title: 'leetcode: valid-sudoku',
    content: 'Brush leetcode with rust: valid-sudoku',
    category: 'rs',
  },
  {
    num: '2',
    date: '2021-07-05',
    title: 'leetcode: sudoku-solver',
    content: 'Brush leetcode with rust: sudoku-solver',
    category: 'rs',
  },
  {
    num: '1',
    date: '2021-07-05',
    title: 'leetcode: permutations',
    content: 'Brush leetcode with rust: permutations',
    category: 'rs',
  },
];

export default ui_data;
