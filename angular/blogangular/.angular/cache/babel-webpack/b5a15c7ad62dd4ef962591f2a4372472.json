{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/service/encrypto.service\";\nimport * as i3 from \"src/app/service/data.service\";\nimport * as i4 from \"../../../components/markdown/markdown.component\";\nexport let RustGuiDvelopComponent = /*#__PURE__*/(() => {\n  class RustGuiDvelopComponent {\n    constructor(router, encryptoService, dataService) {\n      this.router = router;\n      this.encryptoService = encryptoService;\n      this.dataService = dataService;\n      this.options = {\n        displayMode: true,\n        throwOnError: false,\n        errorColor: '#cc0000'\n      }; // get_aes =this.router.url.split(\"q=\")[1].toString();\n\n      this.data = this.dataService.get_data();\n    }\n\n    ngOnInit() {// console.log(this.data);\n    }\n\n  }\n\n  RustGuiDvelopComponent.ɵfac = function RustGuiDvelopComponent_Factory(t) {\n    return new (t || RustGuiDvelopComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.EncryptoService), i0.ɵɵdirectiveInject(i3.DataService));\n  };\n\n  RustGuiDvelopComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RustGuiDvelopComponent,\n    selectors: [[\"app-rust-gui-dvelop\"]],\n    decls: 8,\n    vars: 3,\n    consts: [[1, \"main-content\"], [2, \"height\", \"80px\", \"font-size\", \"1.8rem\"], [2, \"width\", \"80vw\"], [3, \"md_file\"]],\n    template: function RustGuiDvelopComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\");\n        i0.ɵɵelementStart(2, \"h2\", 1);\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\");\n        i0.ɵɵtext(5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 2);\n        i0.ɵɵelement(7, \"app-markdown-preview\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", ctx.data[0].title, \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", ctx.data[0].content, \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"md_file\", \"/markdown-files/rust/rust_life_cycle.md\");\n      }\n    },\n    directives: [i4.MarkdownComponent],\n    styles: [\"\"]\n  });\n  return RustGuiDvelopComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}