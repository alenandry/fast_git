{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Pipe, InjectionToken, PLATFORM_ID, Injectable, Inject, Optional, EventEmitter, Component, Input, Output, SecurityContext, NgModule } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport * as marked from 'marked';\nimport { Renderer } from 'marked';\nexport { Renderer as MarkedRenderer } from 'marked';\nimport { map, first } from 'rxjs/operators';\nimport * as i1 from '@angular/common/http';\nimport * as i3 from '@angular/platform-browser';\n/* eslint-disable */\n\nconst _c0 = [\"*\"];\n\nclass KatexOptions {} //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoia2F0ZXgtb3B0aW9ucy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9zcmMva2F0ZXgtb3B0aW9ucy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsTUFBTSxPQUFPLFlBQVk7Q0E4RXhCIiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgKi9cclxuZXhwb3J0IGNsYXNzIEthdGV4T3B0aW9ucyB7XHJcbiAgICAvKipcclxuICAgICAqIElmIGB0cnVlYCwgbWF0aCB3aWxsIGJlIHJlbmRlcmVkIGluIGRpc3BsYXkgbW9kZVxyXG4gICAgICogKG1hdGggaW4gZGlzcGxheSBzdHlsZSBhbmQgY2VudGVyIG1hdGggb24gcGFnZSlcclxuICAgICAqXHJcbiAgICAgKiBJZiBgZmFsc2VgLCBtYXRoIHdpbGwgYmUgcmVuZGVyZWQgaW4gaW5saW5lIG1vZGVcclxuICAgICAqIEBkZWZhdWx0IGZhbHNlXHJcbiAgICAgKi9cclxuICAgIGRpc3BsYXlNb2RlPzogYm9vbGVhbjtcclxuICAgIC8qKlxyXG4gICAgICogSWYgYHRydWVgLCBLYVRlWCB3aWxsIHRocm93IGEgYFBhcnNlRXJyb3JgIHdoZW5cclxuICAgICAqIGl0IGVuY291bnRlcnMgYW4gdW5zdXBwb3J0ZWQgY29tbWFuZCBvciBpbnZhbGlkIExhVGV4XHJcbiAgICAgKlxyXG4gICAgICogSWYgYGZhbHNlYCwgS2FUZVggd2lsbCByZW5kZXIgdW5zdXBwb3J0ZWQgY29tbWFuZHMgYXNcclxuICAgICAqIHRleHQsIGFuZCByZW5kZXIgaW52YWxpZCBMYVRlWCBhcyBpdHMgc291cmNlIGNvZGUgd2l0aFxyXG4gICAgICogaG92ZXIgdGV4dCBnaXZpbmcgdGhlIGVycm9yLCBpbiBjb2xvciBnaXZlbiBieSBlcnJvckNvbG9yXHJcbiAgICAgKiBAZGVmYXVsdCB0cnVlXHJcbiAgICAgKi9cclxuICAgIHRocm93T25FcnJvcj86IGJvb2xlYW47XHJcbiAgICAvKipcclxuICAgICAqIEEgQ29sb3Igc3RyaW5nIGdpdmVuIGluIGZvcm1hdCBgI1hYWGAgb3IgYCNYWFhYWFhgXHJcbiAgICAgKi9cclxuICAgIGVycm9yQ29sb3I/OiBzdHJpbmc7XHJcbiAgICAvKipcclxuICAgICAqIEEgY29sbGVjdGlvbiBvZiBjdXN0b20gbWFjcm9zLlxyXG4gICAgICpcclxuICAgICAqIFNlZSBgc3JjL21hY3Jvcy5qc2AgZm9yIGl0cyB1c2FnZVxyXG4gICAgICovXHJcbiAgICBtYWNyb3M/OiBhbnk7XHJcbiAgICAvKipcclxuICAgICAqIElmIGB0cnVlYCwgYFxcY29sb3JgIHdpbGwgd29yayBsaWtlIExhVGVYJ3MgYFxcdGV4dGNvbG9yYFxyXG4gICAgICogYW5kIHRha2VzIDIgYXJndW1lbnRzXHJcbiAgICAgKlxyXG4gICAgICogSWYgYGZhbHNlYCwgYFxcY29sb3JgIHdpbGwgd29yayBsaWtlIExhVGVYJ3MgYFxcY29sb3JgXHJcbiAgICAgKiBhbmQgdGFrZXMgMSBhcmd1bWVudFxyXG4gICAgICpcclxuICAgICAqIEluIGJvdGggY2FzZXMsIGBcXHRleHRjb2xvcmAgd29ya3MgYXMgaW4gTGFUZVhcclxuICAgICAqXHJcbiAgICAgKiBAZGVmYXVsdCBmYWxzZVxyXG4gICAgICovXHJcbiAgICBjb2xvcklzVGV4dENvbG9yPzogYm9vbGVhbjtcclxuICAgIC8qKlxyXG4gICAgICogQWxsIHVzZXItc3BlY2lmaWVkIHNpemVzIHdpbGwgYmUgY2FwZWQgdG8gYG1heFNpemVgIGVtc1xyXG4gICAgICpcclxuICAgICAqIElmIHNldCB0byBJbmZpbml0eSwgdXNlcnMgY2FuIG1ha2UgZWxlbWVudHMgYW5kIHNwYWNlXHJcbiAgICAgKiBhcmJpdHJhcmlseSBsYXJnZVxyXG4gICAgICpcclxuICAgICAqIEBkZWZhdWx0IEluZmluaXR5XHJcbiAgICAgKi9cclxuICAgIG1heFNpemU/OiBudW1iZXI7XHJcbiAgICAvKipcclxuICAgICAqIExpbWl0IHRoZSBudW1iZXIgb2YgbWFjcm8gZXhwYW5zaW9ucyB0byBzcGVjaWZpZWQgbnVtYmVyXHJcbiAgICAgKlxyXG4gICAgICogSWYgc2V0IHRvIGBJbmZpbml0eWAsIG1hcmNvIGV4cGFuZGVyIHdpbGwgdHJ5IHRvIGZ1bGx5IGV4cGFuZFxyXG4gICAgICogYXMgaW4gTGFUZXhcclxuICAgICAqXHJcbiAgICAgKiBAZGVmYXVsdCAxMDAwXHJcbiAgICAgKi9cclxuICAgIG1heEV4cGFuZD86IG51bWJlcjtcclxuICAgIC8qKlxyXG4gICAgICogQWxsb3dlZCBwcm90b2NvbHMgaW4gYFxcaHJlZmBcclxuICAgICAqXHJcbiAgICAgKiBVc2UgYF9yZWxhdGl2ZWAgdG8gYWxsb3cgcmVsYXRpdmUgdXJsc1xyXG4gICAgICpcclxuICAgICAqIFVzZSBgKmAgdG8gYWxsb3cgYWxsIHByb3RvY29sc1xyXG4gICAgICovXHJcbiAgICBhbGxvd2VkUHJvdG9jb2xzPzogc3RyaW5nW107XHJcbiAgICAvKipcclxuICAgICAqIElmIGBmYWxzZWAgb3IgYFwiaWdub3JlXCJgLCBhbGxvdyBmZWF0dXJlcyB0aGF0IG1ha2VcclxuICAgICAqIHdyaXRpbmcgaW4gTGFUZXggY29udmVuaWVudCBidXQgbm90IHN1cHBvcnRlZCBieSBMYVRleFxyXG4gICAgICpcclxuICAgICAqIElmIGB0cnVlYCBvciBgXCJlcnJvclwiYCwgdGhyb3cgYW4gZXJyb3IgZm9yIHN1Y2ggdHJhbnNncmVzc2lvbnNcclxuICAgICAqXHJcbiAgICAgKiBJZiBgXCJ3YXJuXCJgLCB3YXJuIGFib3V0IGJlaGF2aW9yIHZpYSBgY29uc29sZS53YXJuYFxyXG4gICAgICpcclxuICAgICAqIEBkZWZhdWx0IFwid2FyblwiXHJcbiAgICAgKi9cclxuICAgIHN0cmljdD86IGJvb2xlYW4gfCBzdHJpbmcgfCBGdW5jdGlvbjtcclxufVxyXG4iXX0=\n//# sourceMappingURL=D:/Github/ngx-markdown/dist/lib/esm2020/src/module.js.map\n\n\nlet LanguagePipe = /*#__PURE__*/(() => {\n  class LanguagePipe {\n    transform(value, language) {\n      if (value == null) {\n        value = '';\n      }\n\n      if (language == null) {\n        language = '';\n      }\n\n      if (typeof value !== 'string') {\n        console.error(`LanguagePipe has been invoked with an invalid value type [${typeof value}]`);\n        return value;\n      }\n\n      if (typeof language !== 'string') {\n        console.error(`LanguagePipe has been invoked with an invalid parameter [${typeof language}]`);\n        return value;\n      }\n\n      return '```' + language + '\\n' + value + '\\n```';\n    }\n\n  }\n\n  LanguagePipe.ɵfac = function LanguagePipe_Factory(t) {\n    return new (t || LanguagePipe)();\n  };\n\n  LanguagePipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n    name: \"language\",\n    type: LanguagePipe,\n    pure: true\n  });\n  return LanguagePipe;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})(); //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGFuZ3VhZ2UucGlwZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9zcmMvbGFuZ3VhZ2UucGlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsSUFBSSxFQUFpQixNQUFNLGVBQWUsQ0FBQzs7QUFLcEQsTUFBTSxPQUFPLFlBQVk7SUFFdkIsU0FBUyxDQUFDLEtBQWEsRUFBRSxRQUFnQjtRQUN2QyxJQUFJLEtBQUssSUFBSSxJQUFJLEVBQUU7WUFDakIsS0FBSyxHQUFHLEVBQUUsQ0FBQztTQUNaO1FBQ0QsSUFBSSxRQUFRLElBQUksSUFBSSxFQUFFO1lBQ3BCLFFBQVEsR0FBRyxFQUFFLENBQUM7U0FDZjtRQUNELElBQUksT0FBTyxLQUFLLEtBQUssUUFBUSxFQUFFO1lBQzdCLE9BQU8sQ0FBQyxLQUFLLENBQUMsNkRBQTZELE9BQU8sS0FBSyxHQUFHLENBQUMsQ0FBQztZQUM1RixPQUFPLEtBQUssQ0FBQztTQUNkO1FBQ0QsSUFBSSxPQUFPLFFBQVEsS0FBSyxRQUFRLEVBQUU7WUFDaEMsT0FBTyxDQUFDLEtBQUssQ0FBQyw0REFBNEQsT0FBTyxRQUFRLEdBQUcsQ0FBQyxDQUFDO1lBQzlGLE9BQU8sS0FBSyxDQUFDO1NBQ2Q7UUFDRCxPQUFPLEtBQUssR0FBRyxRQUFRLEdBQUcsSUFBSSxHQUFJLEtBQUssR0FBRyxPQUFPLENBQUM7SUFDcEQsQ0FBQzs7eUdBbEJVLFlBQVk7dUdBQVosWUFBWTsyRkFBWixZQUFZO2tCQUh4QixJQUFJO21CQUFDO29CQUNKLElBQUksRUFBRSxVQUFVO2lCQUNqQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBpcGUsIFBpcGVUcmFuc2Zvcm0gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbkBQaXBlKHtcclxuICBuYW1lOiAnbGFuZ3VhZ2UnLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgTGFuZ3VhZ2VQaXBlIGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybSB7XHJcblxyXG4gIHRyYW5zZm9ybSh2YWx1ZTogc3RyaW5nLCBsYW5ndWFnZTogc3RyaW5nKTogc3RyaW5nIHtcclxuICAgIGlmICh2YWx1ZSA9PSBudWxsKSB7XHJcbiAgICAgIHZhbHVlID0gJyc7XHJcbiAgICB9XHJcbiAgICBpZiAobGFuZ3VhZ2UgPT0gbnVsbCkge1xyXG4gICAgICBsYW5ndWFnZSA9ICcnO1xyXG4gICAgfVxyXG4gICAgaWYgKHR5cGVvZiB2YWx1ZSAhPT0gJ3N0cmluZycpIHtcclxuICAgICAgY29uc29sZS5lcnJvcihgTGFuZ3VhZ2VQaXBlIGhhcyBiZWVuIGludm9rZWQgd2l0aCBhbiBpbnZhbGlkIHZhbHVlIHR5cGUgWyR7dHlwZW9mIHZhbHVlfV1gKTtcclxuICAgICAgcmV0dXJuIHZhbHVlO1xyXG4gICAgfVxyXG4gICAgaWYgKHR5cGVvZiBsYW5ndWFnZSAhPT0gJ3N0cmluZycpIHtcclxuICAgICAgY29uc29sZS5lcnJvcihgTGFuZ3VhZ2VQaXBlIGhhcyBiZWVuIGludm9rZWQgd2l0aCBhbiBpbnZhbGlkIHBhcmFtZXRlciBbJHt0eXBlb2YgbGFuZ3VhZ2V9XWApO1xyXG4gICAgICByZXR1cm4gdmFsdWU7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gJ2BgYCcgKyBsYW5ndWFnZSArICdcXG4nICsgIHZhbHVlICsgJ1xcbmBgYCc7XHJcbiAgfVxyXG59XHJcbiJdfQ==\n//# sourceMappingURL=D:/Github/ngx-markdown/dist/lib/esm2020/src/module.js.map\n\n\nvar PrismPlugin = /*#__PURE__*/(() => {\n  (function (PrismPlugin) {\n    PrismPlugin[\"CommandLine\"] = \"command-line\";\n    PrismPlugin[\"LineHighlight\"] = \"line-highlight\";\n    PrismPlugin[\"LineNumbers\"] = \"line-numbers\";\n  })(PrismPlugin || (PrismPlugin = {}));\n\n  return PrismPlugin;\n})();\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFya2VkLXJlbmRlcmVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vbGliL3NyYy9tYXJrZWQtcmVuZGVyZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsSUFBSSxjQUFjLEVBQUUsTUFBTSxRQUFRLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyBSZW5kZXJlciBhcyBNYXJrZWRSZW5kZXJlciB9IGZyb20gJ21hcmtlZCc7XHJcbiJdfQ==\n//# sourceMappingURL=D:/Github/ngx-markdown/dist/lib/esm2020/src/module.js.map\nclass MarkedOptions {} //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFya2VkLW9wdGlvbnMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9saWIvc3JjL21hcmtlZC1vcHRpb25zLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUdBLE1BQU0sT0FBTyxhQUFhO0NBd0V6QiIsInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlICovXHJcbmltcG9ydCB7IE1hcmtlZFJlbmRlcmVyIH0gZnJvbSAnLi9tYXJrZWQtcmVuZGVyZXInO1xyXG5cclxuZXhwb3J0IGNsYXNzIE1hcmtlZE9wdGlvbnMge1xyXG4gIC8qKlxyXG4gICAqIEEgcHJlZml4IFVSTCBmb3IgYW55IHJlbGF0aXZlIGxpbmsuXHJcbiAgICovXHJcbiAgYmFzZVVybD86IHN0cmluZztcclxuXHJcbiAgLyoqXHJcbiAgICogRW5hYmxlIEdGTSBsaW5lIGJyZWFrcy4gVGhpcyBvcHRpb24gcmVxdWlyZXMgdGhlIGdmbSBvcHRpb24gdG8gYmUgdHJ1ZS5cclxuICAgKi9cclxuICBicmVha3M/OiBib29sZWFuO1xyXG5cclxuICAvKipcclxuICAgKiBFbmFibGUgR2l0SHViIGZsYXZvcmVkIG1hcmtkb3duLlxyXG4gICAqL1xyXG4gIGdmbT86IGJvb2xlYW47XHJcblxyXG4gIC8qKlxyXG4gICAqIEluY2x1ZGUgYW4gaWQgYXR0cmlidXRlIHdoZW4gZW1pdHRpbmcgaGVhZGluZ3MuXHJcbiAgICovXHJcbiAgaGVhZGVySWRzPzogYm9vbGVhbjtcclxuXHJcbiAgLyoqXHJcbiAgICogU2V0IHRoZSBwcmVmaXggZm9yIGhlYWRlciB0YWcgaWRzLlxyXG4gICAqL1xyXG4gIGhlYWRlclByZWZpeD86IHN0cmluZztcclxuXHJcbiAgLyoqXHJcbiAgICogU2V0IHRoZSBwcmVmaXggZm9yIGNvZGUgYmxvY2sgY2xhc3Nlcy5cclxuICAgKi9cclxuICBsYW5nUHJlZml4Pzogc3RyaW5nO1xyXG5cclxuICAvKipcclxuICAgKiBNYW5nbGUgYXV0b2xpbmtzICg8ZW1haWxAZG9tYWluLmNvbT4pLlxyXG4gICAqL1xyXG4gIG1hbmdsZT86IGJvb2xlYW47XHJcblxyXG4gIC8qKlxyXG4gICAqIENvbmZvcm0gdG8gb2JzY3VyZSBwYXJ0cyBvZiBtYXJrZG93bi5wbCBhcyBtdWNoIGFzIHBvc3NpYmxlLiBEb24ndCBmaXggYW55IG9mIHRoZSBvcmlnaW5hbCBtYXJrZG93biBidWdzIG9yIHBvb3IgYmVoYXZpb3IuXHJcbiAgICovXHJcbiAgcGVkYW50aWM/OiBib29sZWFuO1xyXG5cclxuICAvKipcclxuICAgKiBUeXBlOiBvYmplY3QgRGVmYXVsdDogbmV3IFJlbmRlcmVyKClcclxuICAgKlxyXG4gICAqIEFuIG9iamVjdCBjb250YWluaW5nIGZ1bmN0aW9ucyB0byByZW5kZXIgdG9rZW5zIHRvIEhUTUwuXHJcbiAgICovXHJcbiAgcmVuZGVyZXI/OiBNYXJrZWRSZW5kZXJlcjtcclxuXHJcbiAgLyoqXHJcbiAgICogU2hvd3MgYW4gSFRNTCBlcnJvciBtZXNzYWdlIHdoZW4gcmVuZGVyaW5nIGZhaWxzLlxyXG4gICAqL1xyXG4gIHNpbGVudD86IGJvb2xlYW47XHJcblxyXG4gIC8qKlxyXG4gICAqIFVzZSBzbWFydGVyIGxpc3QgYmVoYXZpb3IgdGhhbiB0aGUgb3JpZ2luYWwgbWFya2Rvd24uIE1heSBldmVudHVhbGx5IGJlIGRlZmF1bHQgd2l0aCB0aGUgb2xkIGJlaGF2aW9yIG1vdmVkIGludG8gcGVkYW50aWMuXHJcbiAgICovXHJcbiAgc21hcnRMaXN0cz86IGJvb2xlYW47XHJcblxyXG4gIC8qKlxyXG4gICAqIFVzZSBcInNtYXJ0XCIgdHlwb2dyYWhpYyBwdW5jdHVhdGlvbiBmb3IgdGhpbmdzIGxpa2UgcXVvdGVzIGFuZCBkYXNoZXMuXHJcbiAgICovXHJcbiAgc21hcnR5cGFudHM/OiBib29sZWFuO1xyXG5cclxuICAvKipcclxuICAgKiBHZW5lcmF0ZSBjbG9zaW5nIHNsYXNoIGZvciBzZWxmLWNsb3NpbmcgdGFncyAoPGJyLz4gaW5zdGVhZCBvZiA8YnI+KVxyXG4gICAqL1xyXG4gIHhodG1sPzogYm9vbGVhbjtcclxuXHJcbiAgLyoqXHJcbiAgICogQSBmdW5jdGlvbiB0byBoaWdobGlnaHQgY29kZSBibG9ja3MuIFRoZSBmdW5jdGlvbiB0YWtlcyB0aHJlZSBhcmd1bWVudHM6IGNvZGUsIGxhbmcsIGFuZCBjYWxsYmFjay5cclxuICAgKi9cclxuICBoaWdobGlnaHQ/KGNvZGU6IHN0cmluZywgbGFuZzogc3RyaW5nLCBjYWxsYmFjaz86IChlcnJvcjogYW55IHwgdW5kZWZpbmVkLCBjb2RlOiBzdHJpbmcpID0+IHZvaWQpOiBzdHJpbmc7XHJcbn1cclxuIl19\n//# sourceMappingURL=D:/Github/ngx-markdown/dist/lib/esm2020/src/module.js.map\n\n/* eslint-disable max-len */\n\n\nconst errorJoyPixelsNotLoaded = '[ngx-markdown] When using the `emoji` attribute you *have to* include Emoji-Toolkit files to `angular.json` or use imports. See README for more information';\nconst errorKatexNotLoaded = '[ngx-markdown] When using the `katex` attribute you *have to* include KaTeX files to `angular.json` or use imports. See README for more information';\nconst errorSrcWithoutHttpClient = '[ngx-markdown] When using the `src` attribute you *have to* pass the `HttpClient` as a parameter of the `forRoot` method. See README for more information';\n/* eslint-enable max-len */\n\nconst SECURITY_CONTEXT = new InjectionToken('SECURITY_CONTEXT');\nlet MarkdownService = /*#__PURE__*/(() => {\n  class MarkdownService {\n    constructor(platform, securityContext, http, options, sanitizer) {\n      this.platform = platform;\n      this.securityContext = securityContext;\n      this.http = http;\n      this.sanitizer = sanitizer;\n      this.initialMarkedOptions = {\n        renderer: new Renderer()\n      };\n      this.options = options;\n    }\n\n    get options() {\n      return this._options;\n    }\n\n    set options(value) {\n      this._options = Object.assign(Object.assign({}, this.initialMarkedOptions), value);\n    }\n\n    get renderer() {\n      return this.options.renderer;\n    }\n\n    set renderer(value) {\n      this.options.renderer = value;\n    }\n\n    compile(markdown, decodeHtml = false, emojify = false, markedOptions = this.options) {\n      const trimmed = this.trimIndentation(markdown);\n      const decoded = decodeHtml ? this.decodeHtml(trimmed) : trimmed;\n      const emojified = emojify ? this.renderEmoji(decoded) : decoded;\n      const compiled = marked.parse(emojified, markedOptions);\n      return this.sanitizer.sanitize(this.securityContext, compiled) || '';\n    }\n\n    getSource(src) {\n      if (!this.http) {\n        throw new Error(errorSrcWithoutHttpClient);\n      }\n\n      return this.http.get(src, {\n        responseType: 'text'\n      }).pipe(map(markdown => this.handleExtension(src, markdown)));\n    }\n\n    highlight(element) {\n      if (!isPlatformBrowser(this.platform)) {\n        return;\n      }\n\n      if (typeof Prism !== 'undefined') {\n        if (!element) {\n          element = document;\n        }\n\n        const noLanguageElements = element.querySelectorAll('pre code:not([class*=\"language-\"])');\n        Array.prototype.forEach.call(noLanguageElements, x => x.classList.add('language-none'));\n        Prism.highlightAllUnder(element);\n      }\n    }\n\n    renderKatex(html, options) {\n      if (!isPlatformBrowser(this.platform)) {\n        return html;\n      }\n\n      if (typeof katex === 'undefined' || typeof katex.renderToString === 'undefined') {\n        throw new Error(errorKatexNotLoaded);\n      }\n\n      return html.replace(/\\$([^\\s][^$]*?[^\\s])\\$/gm, (_, tex) => katex.renderToString(tex, options));\n    }\n\n    decodeHtml(html) {\n      if (!isPlatformBrowser(this.platform)) {\n        return html;\n      }\n\n      const textarea = document.createElement('textarea');\n      textarea.innerHTML = html;\n      return textarea.value;\n    }\n\n    handleExtension(src, markdown) {\n      const extension = src ? src.split('?')[0].split('.').splice(-1).join() : '';\n      return extension !== 'md' ? '```' + extension + '\\n' + markdown + '\\n```' : markdown;\n    }\n\n    renderEmoji(html) {\n      if (!isPlatformBrowser(this.platform)) {\n        return html;\n      }\n\n      if (typeof joypixels === 'undefined' || typeof joypixels.shortnameToUnicode === 'undefined') {\n        throw new Error(errorJoyPixelsNotLoaded);\n      }\n\n      return joypixels.shortnameToUnicode(html);\n    }\n\n    trimIndentation(markdown) {\n      if (!markdown) {\n        return '';\n      }\n\n      let indentStart;\n      return markdown.split('\\n').map(line => {\n        let lineIdentStart = indentStart;\n\n        if (line.length > 0) {\n          lineIdentStart = isNaN(lineIdentStart) ? line.search(/\\S|$/) : Math.min(line.search(/\\S|$/), lineIdentStart);\n        }\n\n        if (isNaN(indentStart)) {\n          indentStart = lineIdentStart;\n        }\n\n        return lineIdentStart ? line.substring(lineIdentStart) : line;\n      }).join('\\n');\n    }\n\n  }\n\n  MarkdownService.ɵfac = function MarkdownService_Factory(t) {\n    return new (t || MarkdownService)(i0.ɵɵinject(PLATFORM_ID), i0.ɵɵinject(SECURITY_CONTEXT), i0.ɵɵinject(i1.HttpClient, 8), i0.ɵɵinject(MarkedOptions, 8), i0.ɵɵinject(i3.DomSanitizer));\n  };\n\n  MarkdownService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: MarkdownService,\n    factory: MarkdownService.ɵfac\n  });\n  return MarkdownService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})(); //# sourceMappingURL=data:application/json;base64,\n//# sourceMappingURL=D:/Github/ngx-markdown/dist/lib/esm2020/src/module.js.map\n\n\nlet MarkdownComponent = /*#__PURE__*/(() => {\n  class MarkdownComponent {\n    constructor(element, markdownService) {\n      this.element = element;\n      this.markdownService = markdownService; // Event emitters\n\n      this.error = new EventEmitter();\n      this.load = new EventEmitter();\n      this.ready = new EventEmitter();\n      this._commandLine = false;\n      this._emoji = false;\n      this._katex = false;\n      this._lineHighlight = false;\n      this._lineNumbers = false;\n    } // Plugin - emoji\n\n\n    get emoji() {\n      return this._emoji;\n    }\n\n    set emoji(value) {\n      this._emoji = this.coerceBooleanProperty(value);\n    } // Plugin - katex\n\n\n    get katex() {\n      return this._katex;\n    }\n\n    set katex(value) {\n      this._katex = this.coerceBooleanProperty(value);\n    } // Plugin - lineHighlight\n\n\n    get lineHighlight() {\n      return this._lineHighlight;\n    }\n\n    set lineHighlight(value) {\n      this._lineHighlight = this.coerceBooleanProperty(value);\n    } // Plugin - lineNumbers\n\n\n    get lineNumbers() {\n      return this._lineNumbers;\n    }\n\n    set lineNumbers(value) {\n      this._lineNumbers = this.coerceBooleanProperty(value);\n    } // Plugin - commandLine\n\n\n    get commandLine() {\n      return this._commandLine;\n    }\n\n    set commandLine(value) {\n      this._commandLine = this.coerceBooleanProperty(value);\n    }\n\n    ngOnChanges() {\n      if (this.data != null) {\n        this.handleData();\n        return;\n      }\n\n      if (this.src != null) {\n        this.handleSrc();\n        return;\n      }\n    }\n\n    ngAfterViewInit() {\n      if (!this.data && !this.src) {\n        this.handleTransclusion();\n      }\n    }\n\n    render(markdown, decodeHtml = false) {\n      let compiled = this.markdownService.compile(markdown, decodeHtml, this.emoji);\n      compiled = this.katex ? this.markdownService.renderKatex(compiled, this.katexOptions) : compiled;\n      this.element.nativeElement.innerHTML = compiled;\n      this.handlePlugins();\n      this.markdownService.highlight(this.element.nativeElement);\n      this.ready.emit();\n    }\n\n    coerceBooleanProperty(value) {\n      return value != null && `${String(value)}` !== 'false';\n    }\n\n    handleData() {\n      this.render(this.data);\n    }\n\n    handleSrc() {\n      this.markdownService.getSource(this.src).subscribe(markdown => {\n        this.render(markdown);\n        this.load.emit(markdown);\n      }, error => this.error.emit(error));\n    }\n\n    handleTransclusion() {\n      this.render(this.element.nativeElement.innerHTML, true);\n    }\n\n    handlePlugins() {\n      if (this.commandLine) {\n        this.setPluginClass(this.element.nativeElement, PrismPlugin.CommandLine);\n        this.setPluginOptions(this.element.nativeElement, {\n          dataFilterOutput: this.filterOutput,\n          dataHost: this.host,\n          dataPrompt: this.prompt,\n          dataOutput: this.output,\n          dataUser: this.user\n        });\n      }\n\n      if (this.lineHighlight) {\n        this.setPluginOptions(this.element.nativeElement, {\n          dataLine: this.line,\n          dataLineOffset: this.lineOffset\n        });\n      }\n\n      if (this.lineNumbers) {\n        this.setPluginClass(this.element.nativeElement, PrismPlugin.LineNumbers);\n        this.setPluginOptions(this.element.nativeElement, {\n          dataStart: this.start\n        });\n      }\n    }\n\n    setPluginClass(element, plugin) {\n      const preElements = element.querySelectorAll('pre');\n\n      for (let i = 0; i < preElements.length; i++) {\n        const classes = plugin instanceof Array ? plugin : [plugin];\n        preElements.item(i).classList.add(...classes);\n      }\n    }\n\n    setPluginOptions(element, options) {\n      const preElements = element.querySelectorAll('pre');\n\n      for (let i = 0; i < preElements.length; i++) {\n        Object.keys(options).forEach(option => {\n          const attributeValue = options[option];\n\n          if (attributeValue) {\n            const attributeName = this.toLispCase(option);\n            preElements.item(i).setAttribute(attributeName, attributeValue.toString());\n          }\n        });\n      }\n    }\n\n    toLispCase(value) {\n      const upperChars = value.match(/([A-Z])/g);\n\n      if (!upperChars) {\n        return value;\n      }\n\n      let str = value.toString();\n\n      for (let i = 0, n = upperChars.length; i < n; i++) {\n        str = str.replace(new RegExp(upperChars[i]), '-' + upperChars[i].toLowerCase());\n      }\n\n      if (str.slice(0, 1) === '-') {\n        str = str.slice(1);\n      }\n\n      return str;\n    }\n\n  }\n\n  MarkdownComponent.ɵfac = function MarkdownComponent_Factory(t) {\n    return new (t || MarkdownComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(MarkdownService));\n  };\n\n  MarkdownComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MarkdownComponent,\n    selectors: [[\"markdown\"], [\"\", \"markdown\", \"\"]],\n    inputs: {\n      data: \"data\",\n      src: \"src\",\n      emoji: \"emoji\",\n      katex: \"katex\",\n      katexOptions: \"katexOptions\",\n      lineHighlight: \"lineHighlight\",\n      line: \"line\",\n      lineOffset: \"lineOffset\",\n      lineNumbers: \"lineNumbers\",\n      start: \"start\",\n      commandLine: \"commandLine\",\n      filterOutput: \"filterOutput\",\n      host: \"host\",\n      prompt: \"prompt\",\n      output: \"output\",\n      user: \"user\"\n    },\n    outputs: {\n      error: \"error\",\n      load: \"load\",\n      ready: \"ready\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 0,\n    template: function MarkdownComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵprojection(0);\n      }\n    },\n    encapsulation: 2\n  });\n  return MarkdownComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet MarkdownPipe = /*#__PURE__*/(() => {\n  class MarkdownPipe {\n    constructor(domSanitizer, elementRef, markdownService, zone) {\n      this.domSanitizer = domSanitizer;\n      this.elementRef = elementRef;\n      this.markdownService = markdownService;\n      this.zone = zone;\n    }\n\n    transform(value) {\n      if (value == null) {\n        return '';\n      }\n\n      if (typeof value !== 'string') {\n        console.error(`MarkdownPipe has been invoked with an invalid value type [${typeof value}]`);\n        return value;\n      }\n\n      const markdown = this.markdownService.compile(value);\n      this.zone.onStable.pipe(first()).subscribe(() => this.markdownService.highlight(this.elementRef.nativeElement));\n      return this.domSanitizer.bypassSecurityTrustHtml(markdown);\n    }\n\n  }\n\n  MarkdownPipe.ɵfac = function MarkdownPipe_Factory(t) {\n    return new (t || MarkdownPipe)(i0.ɵɵdirectiveInject(i3.DomSanitizer, 16), i0.ɵɵdirectiveInject(i0.ElementRef, 16), i0.ɵɵdirectiveInject(MarkdownService, 16), i0.ɵɵdirectiveInject(i0.NgZone, 16));\n  };\n\n  MarkdownPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n    name: \"markdown\",\n    type: MarkdownPipe,\n    pure: true\n  });\n  return MarkdownPipe;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nconst sharedDeclarations = [LanguagePipe, MarkdownComponent, MarkdownPipe];\nlet MarkdownModule = /*#__PURE__*/(() => {\n  class MarkdownModule {\n    static forRoot(markdownModuleConfig) {\n      return {\n        ngModule: MarkdownModule,\n        providers: [MarkdownService, markdownModuleConfig && markdownModuleConfig.loader || [], markdownModuleConfig && markdownModuleConfig.markedOptions || [], {\n          provide: SECURITY_CONTEXT,\n          useValue: markdownModuleConfig && markdownModuleConfig.sanitize != null ? markdownModuleConfig.sanitize : SecurityContext.HTML\n        }]\n      };\n    }\n\n    static forChild() {\n      return {\n        ngModule: MarkdownModule\n      };\n    }\n\n  }\n\n  MarkdownModule.ɵfac = function MarkdownModule_Factory(t) {\n    return new (t || MarkdownModule)();\n  };\n\n  MarkdownModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MarkdownModule\n  });\n  MarkdownModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  return MarkdownModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})(); //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFya2Rvd24ubW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vbGliL3NyYy9tYXJrZG93bi5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUF1QixRQUFRLEVBQVksZUFBZSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRXpGLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUN6RCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLGVBQWUsRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLG9CQUFvQixDQUFDOztBQVl2RSxNQUFNLGtCQUFrQixHQUFHO0lBQ3pCLFlBQVk7SUFDWixpQkFBaUI7SUFDakIsWUFBWTtDQUNiLENBQUM7QUFNRixNQUFNLE9BQU8sY0FBYztJQUN6QixNQUFNLENBQUMsT0FBTyxDQUFDLG9CQUEyQztRQUN4RCxPQUFPO1lBQ0wsUUFBUSxFQUFFLGNBQWM7WUFDeEIsU0FBUyxFQUFFO2dCQUNULGVBQWU7Z0JBQ2Ysb0JBQW9CLElBQUksb0JBQW9CLENBQUMsTUFBTSxJQUFJLEVBQUU7Z0JBQ3pELG9CQUFvQixJQUFJLG9CQUFvQixDQUFDLGFBQWEsSUFBSSxFQUFFO2dCQUNoRTtvQkFDRSxPQUFPLEVBQUUsZ0JBQWdCO29CQUN6QixRQUFRLEVBQUUsb0JBQW9CLElBQUksb0JBQW9CLENBQUMsUUFBUSxJQUFJLElBQUk7d0JBQ3JFLENBQUMsQ0FBQyxvQkFBb0IsQ0FBQyxRQUFRO3dCQUMvQixDQUFDLENBQUMsZUFBZSxDQUFDLElBQUk7aUJBQ3pCO2FBQ0Y7U0FDRixDQUFDO0lBQ0osQ0FBQztJQUVELE1BQU0sQ0FBQyxRQUFRO1FBQ2IsT0FBTztZQUNMLFFBQVEsRUFBRSxjQUFjO1NBQ3pCLENBQUM7SUFDSixDQUFDOzsyR0F0QlUsY0FBYzs0R0FBZCxjQUFjLGlCQVR6QixZQUFZO1FBQ1osaUJBQWlCO1FBQ2pCLFlBQVksYUFGWixZQUFZO1FBQ1osaUJBQWlCO1FBQ2pCLFlBQVk7NEdBT0QsY0FBYzsyRkFBZCxjQUFjO2tCQUoxQixRQUFRO21CQUFDO29CQUNSLE9BQU8sRUFBRSxrQkFBa0I7b0JBQzNCLFlBQVksRUFBRSxrQkFBa0I7aUJBQ2pDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTW9kdWxlV2l0aFByb3ZpZGVycywgTmdNb2R1bGUsIFByb3ZpZGVyLCBTZWN1cml0eUNvbnRleHQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbmltcG9ydCB7IExhbmd1YWdlUGlwZSB9IGZyb20gJy4vbGFuZ3VhZ2UucGlwZSc7XHJcbmltcG9ydCB7IE1hcmtkb3duQ29tcG9uZW50IH0gZnJvbSAnLi9tYXJrZG93bi5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBNYXJrZG93blBpcGUgfSBmcm9tICcuL21hcmtkb3duLnBpcGUnO1xyXG5pbXBvcnQgeyBNYXJrZG93blNlcnZpY2UsIFNFQ1VSSVRZX0NPTlRFWFQgfSBmcm9tICcuL21hcmtkb3duLnNlcnZpY2UnO1xyXG5cclxuLy8gaGF2aW5nIGEgZGVwZW5kZW5jeSBvbiBgSHR0cENsaWVudE1vZHVsZWAgd2l0aGluIGEgbGlicmFyeVxyXG4vLyBicmVha3MgYWxsIHRoZSBpbnRlcmNlcHRvcnMgZnJvbSB0aGUgYXBwIGNvbnN1bWluZyB0aGUgbGlicmFyeVxyXG4vLyBoZXJlLCB3ZSBleHBsaWNpdGVseSBhc2sgdGhlIHVzZXIgdG8gcGFzcyBhIHByb3ZpZGVyIHdpdGhcclxuLy8gdGhlaXIgb3duIGluc3RhbmNlIG9mIGBIdHRwQ2xpZW50TW9kdWxlYFxyXG5leHBvcnQgaW50ZXJmYWNlIE1hcmtkb3duTW9kdWxlQ29uZmlnIHtcclxuICBsb2FkZXI/OiBQcm92aWRlcjtcclxuICBtYXJrZWRPcHRpb25zPzogUHJvdmlkZXI7XHJcbiAgc2FuaXRpemU/OiBTZWN1cml0eUNvbnRleHQ7XHJcbn1cclxuXHJcbmNvbnN0IHNoYXJlZERlY2xhcmF0aW9ucyA9IFtcclxuICBMYW5ndWFnZVBpcGUsXHJcbiAgTWFya2Rvd25Db21wb25lbnQsXHJcbiAgTWFya2Rvd25QaXBlLFxyXG5dO1xyXG5cclxuQE5nTW9kdWxlKHtcclxuICBleHBvcnRzOiBzaGFyZWREZWNsYXJhdGlvbnMsXHJcbiAgZGVjbGFyYXRpb25zOiBzaGFyZWREZWNsYXJhdGlvbnMsXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBNYXJrZG93bk1vZHVsZSB7XHJcbiAgc3RhdGljIGZvclJvb3QobWFya2Rvd25Nb2R1bGVDb25maWc/OiBNYXJrZG93bk1vZHVsZUNvbmZpZyk6IE1vZHVsZVdpdGhQcm92aWRlcnM8TWFya2Rvd25Nb2R1bGU+IHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIG5nTW9kdWxlOiBNYXJrZG93bk1vZHVsZSxcclxuICAgICAgcHJvdmlkZXJzOiBbXHJcbiAgICAgICAgTWFya2Rvd25TZXJ2aWNlLFxyXG4gICAgICAgIG1hcmtkb3duTW9kdWxlQ29uZmlnICYmIG1hcmtkb3duTW9kdWxlQ29uZmlnLmxvYWRlciB8fCBbXSxcclxuICAgICAgICBtYXJrZG93bk1vZHVsZUNvbmZpZyAmJiBtYXJrZG93bk1vZHVsZUNvbmZpZy5tYXJrZWRPcHRpb25zIHx8IFtdLFxyXG4gICAgICAgIHtcclxuICAgICAgICAgIHByb3ZpZGU6IFNFQ1VSSVRZX0NPTlRFWFQsXHJcbiAgICAgICAgICB1c2VWYWx1ZTogbWFya2Rvd25Nb2R1bGVDb25maWcgJiYgbWFya2Rvd25Nb2R1bGVDb25maWcuc2FuaXRpemUgIT0gbnVsbFxyXG4gICAgICAgICAgICA/IG1hcmtkb3duTW9kdWxlQ29uZmlnLnNhbml0aXplXHJcbiAgICAgICAgICAgIDogU2VjdXJpdHlDb250ZXh0LkhUTUwsXHJcbiAgICAgICAgfSxcclxuICAgICAgXSxcclxuICAgIH07XHJcbiAgfVxyXG5cclxuICBzdGF0aWMgZm9yQ2hpbGQoKTogTW9kdWxlV2l0aFByb3ZpZGVyczxNYXJrZG93bk1vZHVsZT4ge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgbmdNb2R1bGU6IE1hcmtkb3duTW9kdWxlLFxyXG4gICAgfTtcclxuICB9XHJcbn1cclxuIl19\n//# sourceMappingURL=D:/Github/ngx-markdown/dist/lib/esm2020/src/module.js.map\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9saWIvc3JjL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGNBQWMsaUJBQWlCLENBQUM7QUFDaEMsY0FBYyxpQkFBaUIsQ0FBQztBQUNoQyxjQUFjLHNCQUFzQixDQUFDO0FBQ3JDLGNBQWMsbUJBQW1CLENBQUM7QUFDbEMsY0FBYyxpQkFBaUIsQ0FBQztBQUNoQyxjQUFjLG9CQUFvQixDQUFDO0FBQ25DLGNBQWMsa0JBQWtCLENBQUM7QUFDakMsY0FBYyxtQkFBbUIsQ0FBQztBQUNsQyxjQUFjLGdCQUFnQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSAnLi9rYXRleC1vcHRpb25zJztcclxuZXhwb3J0ICogZnJvbSAnLi9sYW5ndWFnZS5waXBlJztcclxuZXhwb3J0ICogZnJvbSAnLi9tYXJrZG93bi5jb21wb25lbnQnO1xyXG5leHBvcnQgKiBmcm9tICcuL21hcmtkb3duLm1vZHVsZSc7XHJcbmV4cG9ydCAqIGZyb20gJy4vbWFya2Rvd24ucGlwZSc7XHJcbmV4cG9ydCAqIGZyb20gJy4vbWFya2Rvd24uc2VydmljZSc7XHJcbmV4cG9ydCAqIGZyb20gJy4vbWFya2VkLW9wdGlvbnMnO1xyXG5leHBvcnQgKiBmcm9tICcuL21hcmtlZC1yZW5kZXJlcic7XHJcbmV4cG9ydCAqIGZyb20gJy4vcHJpc20tcGx1Z2luJztcclxuIl19\n//# sourceMappingURL=D:/Github/ngx-markdown/dist/lib/esm2020/src/module.js.map\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVibGljX2FwaS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9wdWJsaWNfYXBpLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGNBQWMsYUFBYSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSAnLi9zcmMvaW5kZXgnO1xyXG4iXX0=\n//# sourceMappingURL=D:/Github/ngx-markdown/dist/lib/esm2020/module.js.map\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LW1hcmtkb3duLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vbGliL25neC1tYXJrZG93bi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7R0FFRztBQUVILGNBQWMsY0FBYyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBHZW5lcmF0ZWQgYnVuZGxlIGluZGV4LiBEbyBub3QgZWRpdC5cbiAqL1xuXG5leHBvcnQgKiBmcm9tICcuL3B1YmxpY19hcGknO1xuIl19\n//# sourceMappingURL=D:/Github/ngx-markdown/dist/lib/esm2020/module.js.map\n\n\nexport { KatexOptions, LanguagePipe, MarkdownComponent, MarkdownModule, MarkdownPipe, MarkdownService, MarkedOptions, PrismPlugin, SECURITY_CONTEXT, errorJoyPixelsNotLoaded, errorKatexNotLoaded, errorSrcWithoutHttpClient };","map":null,"metadata":{},"sourceType":"module"}